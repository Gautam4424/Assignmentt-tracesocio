pipeline {
    agent any
    
    options {
        disableConcurrentBuilds()
    }

    environment {
        DOCKER_IMAGE = "gautam4424/node_app"
        IMAGE_TAG = "latest"
    }

    stages {

        stage('Pull Code from GitHub') {
            steps {
                git branch: 'main', url: 'https://github.com/Gautam4424/Assignmentt-tracesocio.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                // SonarQube setup: Run sonar-scanner with projectKey, source directory, and auth token
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                sh '''
                docker build -t $DOCKER_IMAGE:$IMAGE_TAG .
                docker push $DOCKER_IMAGE:$IMAGE_TAG
                '''
            }
        }

        stage('Trivy Vulnerability Scan') {
            steps {
                // Trivy scan: Run image vulnerability scan with severity filter (e.g., CRITICAL, HIGH)
            }
        }

        stage('Helm Deploy') {
            steps {
                // Helm install or upgrade (local or via SSH)
                // Example (local): helm upgrade --install node-app ./node_app --atomic
                // Example (remote via SSH): ssh user@host 'helm upgrade --install ...'
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed successfully."
        }
        failure {
            echo "❌ Pipeline failed. Please check the build logs."
        }
    }
}
